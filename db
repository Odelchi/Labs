from flask import Flask
from flask import render_template, request, abort
import psycopg2

def insert(name, surname, tel):
    con = psycopg2.connect(dbname='web', user='postgres', password='1603', host='localhost', port='5432')
    cursor = con.cursor()
    insert = (f"INSERT INTO main(name, surname, tel) "
              f"VALUES ('{name}', '{surname}', '{tel}')")
    cursor.execute(insert)
    con.commit()
    con.close()


def delete(com):
    con = psycopg2.connect(dbname='web', user='postgres', password='1603', host='localhost', port='5432')
    cursor = con.cursor()
    cursor.execute(com)
    con.commit()
    con.close()



def list_users():
    con = psycopg2.connect(dbname='web', user='postgres', password='1603', host='localhost', port='5432')
    cursor = con.cursor()
    cursor.execute('SELECT * FROM main')
    result = cursor.fetchall()
    total = []
    for user in result:
        user = list(user)
        total1 = []
        for val in user:
            total1.append(str(val).strip())
        total.append(total1)
        listing = []
    for val in total:
        listing.append(
            {'username': val[0] + val[1], 'name': val[0], 'surname': val[1],  'tel': val[2]})
    return listing



app = Flask(__name__)



@app.route('/', methods = ['get'])
def index():
    return render_template('index.html')

@app.route('/name/<name>', methods = ['get'])
def name_page(name):
    return render_template('index.html', username=name)

@app.route('/users', methods = ['get','post'])
def users():
    if request.method == 'POST':
        name = request.form.get('name')
        surname = request.form.get('surname')
        tel = request.form.get('tel')
        insert(name, surname, tel)
    return render_template('users.html', users=list_users())

@app.route('/users/<username>')
def check(username):
    users = ''
    for i in list_users():
        if username == i['username']:
            users = i
    return f'<h2>UserName:{users["username"]} </h2> <br>'\
           f'<h2>Name:{users["name"]} </h2> <br>'\
           f'<h2> Surname:{users["surname"]} </h2> <br>' \
           f'<h2>Tel:{users["tel"]} </h2> <br>'

@app.route('/users/<username>/delete')
def delete(username):
    flag = False #по умолчанию считаю, что человека нет в списке пользователей
    for i in list_users():
        if username == i['username']:
            flag = True
            users = i
    if not flag:
        abort(505)
    command =(f"DELETE FROM main WHERE name = '{users['name']}' AND surname ='{users['surname']}' AND tel = '{users['tel']}'")
    delete(command)
    render_template('users.html', users=list_users())

if __name__ == '__main__':
    app.run(debug=True)
